<script src="js/typeahead.bundle.js"></script>
<script src="js/scripts.js"></script>
<style>
    body {
        background-color: lightgray;
    }
    .twitter-typeahead {
      width: 90%;
    }

    .tt-menu {
      z-index: 100;
      max-height: 240px;
      overflow-y: auto;
      background-color: #fff;
      margin-top: 3px;
      border-radius: 3px;
      width: 100%;
      box-shadow: 0 0 3px #666;
      padding-bottom: 6px;
    }
    
    .tt-menu .tt-suggestion {
      padding: 5px 10px;
      text-align: left;
      font-size: 16px !important;
      color: #464a4c;
    }
    
    .tt-menu .tt-suggestion.tt-cursor {
      background-color: #ccc;
    }

  </style>

<div class="row mt-3">
    <div class="col-xl-12">
        <div class="input-group d-flex justify-content-center">
            <div class="input-group-prepend">
              <input type="button" class="input-group-text" id="btnKeyword" value="Search"></input>
            </div>
            <input type="text" id="search-area" class="form-control typeahead", placeholder="검색" />
          </div>
    </div>
</div>

<div class="row mt-3">
    <div class="col" style="height: 550px;">
        <div id="map" style="width:100%;height:550px;"></div>
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=[APPKEY]&libraries=services"></script>
<script>
// 마커를 클릭하면 장소명을 표출할 인포윈도우 입니다
var infowindow = new kakao.maps.InfoWindow({zIndex:1});

var mapContainer = document.getElementById('map'), // 지도를 표시할 div 
    mapOption = {
        center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표
        level: 3 // 지도의 확대 레벨
    };  
var map = new kakao.maps.Map(mapContainer, mapOption); 

// 장소 검색 객체를 생성합니다
var ps = new kakao.maps.services.Places(); 

function mapStart() {
        // 지도를 생성합니다    
var map = new kakao.maps.Map(mapContainer, mapOption); 
map.setDraggable(false);
map.setZoomable(false);

// 장소 검색 객체를 생성합니다
var ps = new kakao.maps.services.Places(); 
// 키워드로 장소를 검색합니다
let address = $('#search-area').val()+' 한솥도시락';
ps.keywordSearch(address, placesSearchCB); 

// 키워드 검색 완료 시 호출되는 콜백함수 입니다
function placesSearchCB (data, status, pagination) {
    if (status === kakao.maps.services.Status.OK) {
        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해
        // LatLngBounds 객체에 좌표를 추가합니다
        var bounds = new kakao.maps.LatLngBounds();

        for (var i=0; i<data.length; i++) {
            displayMarker(data[i]);    
            bounds.extend(new kakao.maps.LatLng(data[i].y, data[i].x));
        }       

        // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다
        map.setBounds(bounds);
    } 
}

// 지도에 마커를 표시하는 함수입니다
function displayMarker(place) {
    
    // 마커를 생성하고 지도에 표시합니다
    var marker = new kakao.maps.Marker({
        map: map,
        position: new kakao.maps.LatLng(place.y, place.x) 
    });

    // 마커에 클릭이벤트를 등록합니다
    kakao.maps.event.addListener(marker, 'click', function() {
        // 마커를 클릭하면 장소명이 인포윈도우에 표출됩니다
        infowindow.setContent('<div style="padding:5px;font-size:12px;">' + place.place_name + '</div>');
        infowindow.open(map, marker);
    });
}
}

$('#search-area').keydown(function (key) {
    if(key.keyCode == 13) {
        mapStart();
    }
})
$('#btnKeyword').click(function(e) {
    mapStart();
})

</script>
    </div>
</div>